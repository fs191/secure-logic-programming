% BoM Application. Taken from [ZCF+97]:
% C. Zaniolo, S. Ceri, C. Faloutsos, T.T. Snodgrass, V.S. Subrahmanian, and R. Zicari, 
% "Advanced Database Systems", Morgan Kauffmann Publishers, 1997.
% Reproduced with permission of the author

:-type(assembly, [
  @part : private string,
  @subpart : private string,
  @quantity : private string]).

:-type(part_cost, [
  @basic_part : public string,
  @supplier : public string,
  @cost : public float,
  @time : public int]).

% All subparts: a transitive closure query
all_subparts(Part,Sub) :-
  assembly(Part,Sub,_).
all_subparts(Part,Sub2) :- 
  all_subparts(Part,Sub1),
  assembly(Sub1,Sub2,_).

% For each part, basic or otherwise, find its basic subparts 
% (a basic subpart is a subpart of itselt
basic_subparts(BasicP,BasicP) :-
  part_cost(BasicP,_,_,_).
basic_subparts(Prt,BasicP) :- 
  assembly(Prt,SubP,_),
  basic_subparts(SubP,BasicP).

% For each basic part, find the least time needed for delivery
fastest(Part,Time) :- 
  part_cost(Part,_Sup,_Cost,Time),
  not(faster(Part,Time)).

faster(Part,Time) :- 
  part_cost(Part,_Sup,_Cost,Time),
  part_cost(Part,_Sup1,_Cost1,Time1),
  Time1 < Time.

% Times required for basic subparts of the given assembly
timeForbasic(AssPart,BasicSub,Time) :-
  basic_subparts(AssPart,BasicSub),
  fastest(BasicSub,Time).

% The maximum time required for basic subparts of the given assembly
howsoon(AssPart,Time) :-
  timeForbasic(AssPart,_,Time),
  not(larger(AssPart,Time)).

larger(Part,Time) :- 
  timeForbasic(Part,_,Time),
  timeForbasic(Part,_,Time1),
  Time1 > Time.

:-outputs([X : public int]).
howsoon(bike, X)?

