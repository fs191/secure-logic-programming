%
% Family
%
% Datalog Formulation

% Optionally declare types
:-type(father, [@father:private string,@child:private string]).

% Optionally declare types
:-type(mother, [@mother:private string,@child:private string]).

parent(X,Y) :- 
  father(X,Y)
  ; 
  mother(X,Y).
% The above clause for parent is equivalent to:  
% parent(X,Y) :- 
%   father(X,Y).
% parent(X,Y) :- 
%   mother(X,Y).

ancestor(X,Y) :-
  parent(X,Y),
  X \= Y.
ancestor(X,Y) :- 
  parent(X,Z), 
  ancestor(Z,Y).

:-inputs([@child:public string]).
:-outputs([Ancestor]).
ancestor(Ancestor, @child)?
